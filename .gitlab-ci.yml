---
include:
  - project: 'renovate-bot/renovate-runner'
    file: '/templates/renovate.gitlab-ci.yml'

stages:
  - dependencies
  - test

.build-on-changes-in-component-code:
  rules:
    - changes:
        - custom_components/energa_my_meter/**/*
        - tests/**/*
      if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'

.pipenv-configuration:
  variables:
    WORKON_HOME: &linter_cache_path ${CI_PROJECT_DIR}/.venv
  before_script:
    - mkdir -p "${WORKON_HOME}"
    - pip install pipenv
    - pipenv install --dev
  cache:
    - key: 'python'
      paths:
        - *linter_cache_path

renovate:
  stage: dependencies
  needs: []
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: manual
  variables:
    RENOVATE_EXTRA_FLAGS: ${CI_PROJECT_PATH}
  script:
    - renovate $RENOVATE_EXTRA_FLAGS

lint-custom-component:
  image: python:3.12.5
  stage: test
  extends:
    - .pipenv-configuration
    - .build-on-changes-in-component-code
  script:
    - pipenv run lint

#unit-test-custom-component:
#  image: python:3.12.5
#  stage: test
#  extends:
#    - .pipenv-configuration
#    - .build-on-changes-in-component-code
#  variables:
#    COVERAGE_REPORT_PATH: reports/coverage.report.xml
#    COVERAGE_UNIT_TESTS_REPORT_PATH: reports/unit-tests.report.xml
#  script:
#    - pipenv run test --junitxml=${COVERAGE_UNIT_TESTS_REPORT_PATH}
#    - pipenv run coverage xml -o ${COVERAGE_REPORT_PATH}
#  coverage: '/Total coverage: \d+\.\d+%/'
#  artifacts:
#    when: always
#    reports:
#      junit: ${COVERAGE_UNIT_TESTS_REPORT_PATH}
#      coverage_report:
#        coverage_format: cobertura
#        path: ${COVERAGE_REPORT_PATH}
